name: NPM Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        package-manager: [npm, yarn]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: |
        if [ "${{ matrix.package-manager }}" = "npm" ]; then
          # Clean install
          rm -rf node_modules
          rm -f package-lock.json
          # Install with increased timeout and network retries
          npm install --no-audit --no-fund --prefer-offline --no-progress --network-timeout 100000
          # Generate package-lock.json
          npm install --package-lock-only --no-audit --no-fund --prefer-offline --no-progress --network-timeout 100000
        else
          # Clean install
          rm -rf node_modules
          rm -f yarn.lock
          # Install with increased timeout
          yarn install --frozen-lockfile --no-audit --no-fund --network-timeout 100000
        fi

    - name: Run linter
      run: |
        if [ "${{ matrix.package-manager }}" = "npm" ]; then
          npm run lint:fix
        else
          yarn lint:fix
        fi

    - name: Run tests
      run: |
        if [ "${{ matrix.package-manager }}" = "npm" ]; then
          npm test
        else
          yarn test
        fi

    - name: Build
      run: |
        if [ "${{ matrix.package-manager }}" = "npm" ]; then
          npm run build
        else
          yarn build
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.package-manager }}
        path: dist/
        retention-days: 5 